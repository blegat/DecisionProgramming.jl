var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"paths\nSpecs\nInfluenceDiagram\nInfluenceDiagram(::Vector{Int}, ::Vector{Int}, ::Vector{Int}, ::Vector{Pair{Int, Int}}, ::Vector{Int})\nParams\nParams(::InfluenceDiagram, ::Dict{Int, Array{Float64}}, ::Dict{Int, Array{Int}}, ::Vector{Float64})\nDecisionModel\nDecisionModel(::Specs, ::InfluenceDiagram, ::Params)","category":"page"},{"location":"api/#DecisionProgramming.paths","page":"API","title":"DecisionProgramming.paths","text":"Iterate over paths.\n\n\n\n\n\n","category":"function"},{"location":"api/#DecisionProgramming.Specs","page":"API","title":"DecisionProgramming.Specs","text":"Specification for different model scenarios. For example, we can specify toggling on and off constraints and objectives.\n\nArguments\n\nprobability_sum_cut::Bool: Toggle probability sum cuts on and off.\nnum_paths::Int: If larger than zero, enables the number of paths cuts using the supplied value.\n\n\n\n\n\n","category":"type"},{"location":"api/#DecisionProgramming.InfluenceDiagram","page":"API","title":"DecisionProgramming.InfluenceDiagram","text":"Influence diagram is a directed, acyclic graph.\n\nArguments\n\nC::Vector{Int}: Change nodes.\nD::Vector{Int}: Decision nodes.\nV::Vector{Int}: Value nodes.\nA::Vector{Pair{Int, Int}}: Arcs between nodes.\nS_j::Vector{Int}: Number of states.\nI_j::Vector{Vector{Int}}: Information set.\n\n\n\n\n\n","category":"type"},{"location":"api/#DecisionProgramming.InfluenceDiagram-Tuple{Array{Int64,1},Array{Int64,1},Array{Int64,1},Array{Pair{Int64,Int64},1},Array{Int64,1}}","page":"API","title":"DecisionProgramming.InfluenceDiagram","text":"Construct and validate an influence diagram.\n\n\n\n\n\n","category":"method"},{"location":"api/#DecisionProgramming.Params","page":"API","title":"DecisionProgramming.Params","text":"Model parameters.\n\nArguments\n\nX: Probabilities, X[j][sI(j);sj], ∀j∈C\nY: Consequences, Y[j][s_I(j)], ∀j∈V\nU: Utilities map consequences to real valued outcomes.\n\n\n\n\n\n","category":"type"},{"location":"api/#DecisionProgramming.Params-Tuple{InfluenceDiagram,Dict{Int64,Array{Float64,N} where N},Dict{Int64,Array{Int64,N} where N},Array{Float64,1}}","page":"API","title":"DecisionProgramming.Params","text":"Construct and validate model parameters.\n\n\n\n\n\n","category":"method"},{"location":"api/#DecisionProgramming.DecisionModel","page":"API","title":"DecisionProgramming.DecisionModel","text":"Defines the DecisionModel type.\n\n\n\n\n\n","category":"type"},{"location":"api/#DecisionProgramming.DecisionModel-Tuple{Specs,InfluenceDiagram,Params}","page":"API","title":"DecisionProgramming.DecisionModel","text":"Initializes the DecisionModel.\n\n\n\n\n\n","category":"method"},{"location":"model/#Decision-Model","page":"Decision Model","title":"Decision Model","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"The model is based on [1]","category":"page"},{"location":"model/#Decision-Graph","page":"Decision Model","title":"Decision Graph","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Decision graph is defined as a directed, acyclic graph","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"G=(NA)","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"The set of nodes N=CDV consists of changes nodes C decision nodes D and value nodes V.","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"We index the nodes such that CD=1n and V=n+1n+V where n=C+D","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"The set of edges consists of pairs such that","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"A(ij)1ijN","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Each node jCD is associates with a finite number of states","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"S_j=1S_j","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"We define the information set of node jN as","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"I(j)=i(ij)A","category":"page"},{"location":"model/#Paths","page":"Decision Model","title":"Paths","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"A path is a sequence of states","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"s=(s_1 s_2 s_n)","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"where each state s_iS_i for all chance and decision nodes iCD","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"A subpath is subsequence of path s that is,","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"(s_i_1 s_i_2  s_i_k)","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"where 1i_1i_2i_kn and kn","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"The information path of node jN is a subpath defined as","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"s_I(j)=(s_i  iI(j))","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Concatenation of two paths s and s^ is denoted ss^","category":"page"},{"location":"model/#Sets","page":"Decision Model","title":"Sets","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"The set of all paths is the product set of all states","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"S=_jCD S_j","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"The set of information paths of node jN is the product set of the states in its information set","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"S_I(j)=_iI(j) S_i","category":"page"},{"location":"model/#Probabilities","page":"Decision Model","title":"Probabilities","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"For chance node jC, the probability of state s_j given information state s_I(j) is denoted","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"ℙ(X_j=s_jX_I(j)=s_I(j))0 1","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"The upper bound of the probability of a path s is defined as","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"p(s) = _jC ℙ(X_j=s_jX_I(j)=s_I(j))","category":"page"},{"location":"model/#Decisions","page":"Decision Model","title":"Decisions","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"For each decision node jD a local decision strategy maps information path to a state","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Z_jS_I(j)S_j","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Decision strategy Z contains one local decision strategy for each decision node. Set of all decision strategies is denoted ℤ","category":"page"},{"location":"model/#Consequences","page":"Decision Model","title":"Consequences","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"For value node jV, the consequence given information state S_I(j)","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Y_vS_I(j)ℂ","category":"page"},{"location":"model/#Utilities","page":"Decision Model","title":"Utilities","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Utility function maps consequence to real-valued utilities","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Uℂℝ","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Affine transformation to positive utilities","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"U^(c) = U(c) - min_cℂU(c)","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"The utility of a path","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"mathcalU(s) = _jV U^(Y_j(s_I(j)))","category":"page"},{"location":"model/#Formulation","page":"Decision Model","title":"Formulation","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"beginaligned\nundersetZℤtextmaximizequad\n _sS π(s) mathcalU(s) \ntextsubject toquad\n _s_jS_j z(s_js_I(j))=1quad jD s_I(j)S_I(j) \n 0π(s)p(s)quad sS \n π(s)  z(s_js_I(j))quad sS \n z(s_js_I(j))  01quad jD s_jS_j s_I(j)S_I(j)\nendaligned","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Probability of path π(s)","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Decision strategy z(s_js_I(j)), equivalence","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Active path s where π(s)0","category":"page"},{"location":"model/#Indexing-Paths","page":"Decision Model","title":"Indexing Paths","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"States and paths","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"_iC (S_I(i)S_i) probability stages\n_iD (S_I(i)S_i) decision stages\n_iV S_I(i) utility stages","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"Sizes","category":"page"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"S=_iCD S_i Number of paths\n_iCS_I(i) S_i Number of probability stages\n_iDS_I(i) S_i Number of decision stages\n_vVS_I(v) Number of utility stages","category":"page"},{"location":"model/#Lazy-Cuts","page":"Decision Model","title":"Lazy Cuts","text":"","category":"section"},{"location":"model/#References","page":"Decision Model","title":"References","text":"","category":"section"},{"location":"model/","page":"Decision Model","title":"Decision Model","text":"[1]: Salo, A., Andelmin, J., & Oliveira, F. (2019). Decision Programming for Multi-Stage Optimization under Uncertainty, 1–35. Retrieved from http://arxiv.org/abs/1910.09196","category":"page"},{"location":"#DecisionProgramming.jl","page":"Home","title":"DecisionProgramming.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DecisionProgramming.jl","category":"page"},{"location":"examples/pig-breeding/#Pig-Breeding-Problem","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"","category":"section"},{"location":"examples/pig-breeding/#Description","page":"Pig Breeding Problem","title":"Description","text":"","category":"section"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"The pig breeding problem as described in [1].","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"A pig breeder is growing pigs for a period of four months and subsequently selling them. During this period the pig may or may not develop a certain disease. If the pig has the disease at the time it must be sold, the pig must be sold for slaughtering, and its expected market price is then 300 DKK (Danish kroner). If it is disease free, its expected market price as a breeding animal is 1000 DKKOnce a month, a veterinary doctor sees the pig and makes a test for presence of the disease. If the pig is ill, the test will indicate this with probability 0.80, and if the pig is healthy, the test will indicate this with probability 0.90. At each monthly visit, the doctor may or may not treat the pig for the disease by injecting a certain drug. The cost of an injection is 100 DKK.A pig has the disease in the first month with probability 0.10. A healthy pig develops the disease in the subsequent month with probability 0.20 without injection, whereas a healthy and treated pig develops the disease with probability 0.10, so the injection has some preventive effect. An untreated pig that is unhealthy will remain so in the subsequent month with probability 0.90, whereas the similar probability is 0.50 for an unhealthy pig that is treated. Thus spontaneous cure is possible, but treatment is beneficial on average.","category":"page"},{"location":"examples/pig-breeding/#Formulation","page":"Pig Breeding Problem","title":"Formulation","text":"","category":"section"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"(Image: )","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"The original 4-month formulation.","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"(Image: )","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"Generalized N-month formulation.","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"The diagram has the following states","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"Change nodes and states","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"State h_i represents the health of the pig at month i=1N. Two possible states, ill and healthy.\nState t_i represents the result from testing the pig at month i=1N-1. Two possible states, positive, and negative.","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"Decision nodes and states","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"State d_i represents the decision to treat the pig with injection at month i=1N-1. Two possible states, treat and pass.","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"Value nodes and states","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"Consequences u_i represents the consequences from treating or not treating the pig at month i=1N-1.\nConsequence u_N represents the consequence from health of the pig at month N.","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"Influence is represented by the arcs. Dashed arcs represent no forgetting principle.","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"Probabilities","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"ℙ(t_i = positive  h_i = ill) = 08quad i=1N-1","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"ℙ(t_i = negative  h_i = healthy) = 09quad i=1N-1","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"ℙ(h_1 = ill)=01","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"ℙ(h_i = ill  d_i-1 = pass h_i-1 = healthy)=02quad i=2N","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"ℙ(h_i = ill  d_i-1 = treat h_i-1 = healthy)=01quad i=2N","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"ℙ(h_i = ill  d_i-1 = pass h_i-1 = ill)=09quad i=2N","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"ℙ(h_i = ill  d_i-1 = treat h_i-1 = ill)=05quad i=2N","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"Utilities","category":"page"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"Cost of treating the pig U(Y(d_i=treat))=-100 at month i=1N-1\nCost of not treating the pig U(Y(d_i=pass))=0 at month i=1N-1\nPrice of unhealthy pig U(Y(h_N=ill))=300\nPrice of healthy pig U(Y(h_N=healthy))=1000","category":"page"},{"location":"examples/pig-breeding/#Results","page":"Pig Breeding Problem","title":"Results","text":"","category":"section"},{"location":"examples/pig-breeding/#References","page":"Pig Breeding Problem","title":"References","text":"","category":"section"},{"location":"examples/pig-breeding/","page":"Pig Breeding Problem","title":"Pig Breeding Problem","text":"[1]: Lauritzen, S. L., & Nilsson, D. (2001). Representing and solving decision problems with limited information. Management Science, 47(9), 1235–1251. https://doi.org/10.1287/mnsc.47.9.1235.9779","category":"page"}]
}
